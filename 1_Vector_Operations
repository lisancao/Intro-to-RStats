library(lubridate)

# Exercise 1

append1 <- function(n) {
  x = NULL
  for(i in 1:n) {
    x = c(x, i)
  }
  return(x)
}

append1(10)


system.time({x <- append1(10000)})
system.time({x <- 1:10000})

# exercise 2 
# exctract 150 from lvec? How would you extract the sublist containing weight and height data from lvec? how would you extract brown from lvec? 
names(lvec) = c("age", "weight", "height", "hair")
lvec <- list(age=36, weight=150, height = 175, hair = c("brown", "medium"))

lvec[c("weight", "height")] # get heigh and weight 

lvec$hair[1] # extract brown

lvec$weight
lvec[[2]]


# exercise 3 
# the function as.vector coerces objects to vectors, why doesnt as.vector(lvec) appear to do anything? 
str(lvec)
class(lvec)

#atomic vectors and lists are both 1d objects, both of which are types of vectors. lists are a type of recursive vector. therefire is.vector() evaluates to TRUE and no action is needed
is.vector(lvec) # returns TRUE 


# exercise 4

class <- c()
names(class) <- c("class day", "class start", "class end", "final exam", "text book") 
class <- c(`class day` = "Tuesday", `class start` = hm("12:30pm"), `class end` = hm("2:20pm"), `final exam` = ymd_hm("2020/12/18 3:30pm"), textbook = "R for Data Science")

class(class) <- "SFUcourse"

# write function diff.SFUcourse() that takes an object of class SFUcourse as input and returns the duration of the lecture 

diff.SFUcourse <- function(class) {
  classlen <- as.durati(class$`class start`, class$`class end`)
  cat("The class duration is", classlen)
}

diff.SFUcourse(class)

as.difftime("12:30pm", "2:20pm")

as
         
